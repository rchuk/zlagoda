from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ReceiptItemView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product=None, quantity=None):  # noqa: E501
        """ReceiptItemView - a model defined in OpenAPI

        :param product: The product of this ReceiptItemView.  # noqa: E501
        :type product: int
        :param quantity: The quantity of this ReceiptItemView.  # noqa: E501
        :type quantity: int
        """
        self.openapi_types = {
            'product': int,
            'quantity': int
        }

        self.attribute_map = {
            'product': 'product',
            'quantity': 'quantity'
        }

        self._product = product
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt) -> 'ReceiptItemView':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReceiptItemView of this ReceiptItemView.  # noqa: E501
        :rtype: ReceiptItemView
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product(self) -> int:
        """Gets the product of this ReceiptItemView.


        :return: The product of this ReceiptItemView.
        :rtype: int
        """
        return self._product

    @product.setter
    def product(self, product: int):
        """Sets the product of this ReceiptItemView.


        :param product: The product of this ReceiptItemView.
        :type product: int
        """
        if product is None:
            raise ValueError("Invalid value for `product`, must not be `None`")  # noqa: E501

        self._product = product

    @property
    def quantity(self) -> int:
        """Gets the quantity of this ReceiptItemView.


        :return: The quantity of this ReceiptItemView.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: int):
        """Sets the quantity of this ReceiptItemView.


        :param quantity: The quantity of this ReceiptItemView.
        :type quantity: int
        """
        if quantity is None:
            raise ValueError("Invalid value for `quantity`, must not be `None`")  # noqa: E501

        self._quantity = quantity
