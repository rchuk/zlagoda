from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ReceiptCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offset=None, limit=None, sort_field=None, sort_ascending=None, cashier_ids=None, start_date=None, end_date=None):  # noqa: E501
        """ReceiptCriteria - a model defined in OpenAPI

        :param offset: The offset of this ReceiptCriteria.  # noqa: E501
        :type offset: int
        :param limit: The limit of this ReceiptCriteria.  # noqa: E501
        :type limit: int
        :param sort_field: The sort_field of this ReceiptCriteria.  # noqa: E501
        :type sort_field: str
        :param sort_ascending: The sort_ascending of this ReceiptCriteria.  # noqa: E501
        :type sort_ascending: bool
        :param cashier_ids: The cashier_ids of this ReceiptCriteria.  # noqa: E501
        :type cashier_ids: List[int]
        :param start_date: The start_date of this ReceiptCriteria.  # noqa: E501
        :type start_date: datetime
        :param end_date: The end_date of this ReceiptCriteria.  # noqa: E501
        :type end_date: datetime
        """
        self.openapi_types = {
            'offset': int,
            'limit': int,
            'sort_field': str,
            'sort_ascending': bool,
            'cashier_ids': List[int],
            'start_date': datetime,
            'end_date': datetime
        }

        self.attribute_map = {
            'offset': 'offset',
            'limit': 'limit',
            'sort_field': 'sortField',
            'sort_ascending': 'sortAscending',
            'cashier_ids': 'cashierIds',
            'start_date': 'startDate',
            'end_date': 'endDate'
        }

        self._offset = offset
        self._limit = limit
        self._sort_field = sort_field
        self._sort_ascending = sort_ascending
        self._cashier_ids = cashier_ids
        self._start_date = start_date
        self._end_date = end_date

    @classmethod
    def from_dict(cls, dikt) -> 'ReceiptCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReceiptCriteria of this ReceiptCriteria.  # noqa: E501
        :rtype: ReceiptCriteria
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offset(self) -> int:
        """Gets the offset of this ReceiptCriteria.


        :return: The offset of this ReceiptCriteria.
        :rtype: int
        """
        return self._offset

    @offset.setter
    def offset(self, offset: int):
        """Sets the offset of this ReceiptCriteria.


        :param offset: The offset of this ReceiptCriteria.
        :type offset: int
        """

        self._offset = offset

    @property
    def limit(self) -> int:
        """Gets the limit of this ReceiptCriteria.


        :return: The limit of this ReceiptCriteria.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit: int):
        """Sets the limit of this ReceiptCriteria.


        :param limit: The limit of this ReceiptCriteria.
        :type limit: int
        """

        self._limit = limit

    @property
    def sort_field(self) -> str:
        """Gets the sort_field of this ReceiptCriteria.


        :return: The sort_field of this ReceiptCriteria.
        :rtype: str
        """
        return self._sort_field

    @sort_field.setter
    def sort_field(self, sort_field: str):
        """Sets the sort_field of this ReceiptCriteria.


        :param sort_field: The sort_field of this ReceiptCriteria.
        :type sort_field: str
        """

        self._sort_field = sort_field

    @property
    def sort_ascending(self) -> bool:
        """Gets the sort_ascending of this ReceiptCriteria.


        :return: The sort_ascending of this ReceiptCriteria.
        :rtype: bool
        """
        return self._sort_ascending

    @sort_ascending.setter
    def sort_ascending(self, sort_ascending: bool):
        """Sets the sort_ascending of this ReceiptCriteria.


        :param sort_ascending: The sort_ascending of this ReceiptCriteria.
        :type sort_ascending: bool
        """

        self._sort_ascending = sort_ascending

    @property
    def cashier_ids(self) -> List[int]:
        """Gets the cashier_ids of this ReceiptCriteria.


        :return: The cashier_ids of this ReceiptCriteria.
        :rtype: List[int]
        """
        return self._cashier_ids

    @cashier_ids.setter
    def cashier_ids(self, cashier_ids: List[int]):
        """Sets the cashier_ids of this ReceiptCriteria.


        :param cashier_ids: The cashier_ids of this ReceiptCriteria.
        :type cashier_ids: List[int]
        """

        self._cashier_ids = cashier_ids

    @property
    def start_date(self) -> datetime:
        """Gets the start_date of this ReceiptCriteria.


        :return: The start_date of this ReceiptCriteria.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date: datetime):
        """Sets the start_date of this ReceiptCriteria.


        :param start_date: The start_date of this ReceiptCriteria.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def end_date(self) -> datetime:
        """Gets the end_date of this ReceiptCriteria.


        :return: The end_date of this ReceiptCriteria.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date: datetime):
        """Sets the end_date of this ReceiptCriteria.


        :param end_date: The end_date of this ReceiptCriteria.
        :type end_date: datetime
        """

        self._end_date = end_date
