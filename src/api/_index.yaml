openapi: 3.0.3
info:
  title: Test
  description: Test
  version: 1.0.0
servers:
  - url: https://localhost:3333
tags:
  - name: employee
    description: Employee controller
  - name: productArchetype
    description: Product archetype controller
  - name: product
    description: Product controller
  - name: customerCard
    description: Customer card controller
paths:
  /test:
    get:
      description: Returns test value
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: integer

  /api/employee:
    get:
      tags:
        - employee
      summary: Get list of employees
      operationId: getEmployeeList
      parameters:
        - in: query
          required: false
          name: criteria
          schema:
            $ref: '#/components/schemas/EmployeeCriteria'
      responses:
        200:
          description: List of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    put:
      tags:
        - employee
      summary: Create a new employee
      operationId: createEmployee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeView'
      responses:
        200:
          description: Id of new employee
          content:
            application/json:
              schema:
                type: integer

  /api/employee/{id}:
    get:
      tags:
        - employee
      summary: Get employee by id
      operationId: getEmployeeById
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
      responses:
        200:
          description: Employee by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
    post:
      tags:
        - employee
      summary: Update existing employee
      operationId: updateEmployee
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeView'
      responses:
        200:
          description: Boolean whether employee was updated
          content:
            application/json:
              schema:
                type: boolean
    delete:
      tags:
        - employee
      summary: Delete an employee by id
      operationId: deleteEmployee
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
      responses:
        200:
          description: Boolean whether employee was deleted
          content:
            application/json:
              schema:
                type: boolean

  /api/employee/me:
    get:
      tags:
        - employee
      summary: Get employee information about self
      operationId: getEmployeeMe
      responses:
        200:
          description: Employee information about self
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'

components:
  schemas:
    EmployeeView:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        patronymic:
          type: string
        role:
          $ref: '#/components/schemas/EmployeeRole'
        salary:
          type: integer
        workStartDate:
          type: string
          format: date
        birthDate:
          type: string
          format: date
        phoneNumber:
          type: string
        city:
          type: string
        street:
          type: string
        zipCode:
          type: string
      required:
        - firstName
        - lastName
        - role
        - salary
        - workStartDate
        - birthDate
        - phoneNumber
        - city
        - street
        - zipCode

    Employee:
      allOf:
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
        - $ref: '#/components/schemas/EmployeeView'

    EmployeeRole:
      type: string
      enum:
        - CASHIER
        - MANAGER

    ProductCategoryView:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    ProductCategory:
      allOf:
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
        - $ref: '#/components/schemas/ProductCategoryView'

    ProductArchetypeView:
      type: object
      properties:
        name:
          type: string
        category:
          type: integer
        manufacturer:
          type: string
        description:
          type: string
      required:
        - name
        - category
        - manufacturer
        - description

    ProductArchetype:
      allOf:
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
        - $ref: '#/components/schemas/ProductArchetypeView'

    ProductView:
      type: object
      properties:
        archetype:
          type: integer
        upc:
          type: string
        price:
          type: integer
        quantity:
          type: integer
      required:
        - archetype
        - upc
        - price
        - quantity

    Product:
      allOf:
        - type: object
          properties:
            id:
              type: integer
            hasDiscount:
              type: boolean
          required:
            - id
            - hasDiscount
        - $ref: '#/components/schemas/ProductView'

    ReceiptItem:
      type: object
      properties:
        productArchetype:
          type: integer
        quantity:
          type: integer
        price:
          type: integer
      required:
        - productArchetype
        - quantity
        - price

    ReceiptView:
      type: object
      properties:
        customerCardId:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/ReceiptItem'
      required:
        - items

    Receipt:
      type: object
      properties:
        id:
          type: integer
        cashierId:
          type: integer
        customerCardId:
          type: integer
        dateTime:
          type: string
          format: date-time
        totalPrice:
          type: integer
        vat:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/ReceiptItem'
      required:
        - id
        - cashierId
        - dateTime
        - totalPrice
        - vat
        - items

    CustomerCardView:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        patronymic:
          type: string
        phoneNumber:
          type: string
        discountPercent:
          type: integer
        city:
          type: string
        street:
          type: string
        zipCode:
          type: string
      required:
        - firstName
        - lastName
        - phoneNumber
        - discountPercent

    CustomerCard:
      allOf:
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
        - $ref: '#/components/schemas/CustomerCardView'

    EmployeeCriteria:
      allOf:
        - $ref: '#/components/schemas/BaseCriteria'
        - type: object
          properties:
            role:
              $ref: '#/components/schemas/EmployeeRole'
            lastName:
              type: string

    ProductCriteria:
      allOf:
        - $ref: '#/components/schemas/BaseCriteria'
        - type: object
          properties:
            categoryIds:
              type: array
              items:
                type: integer
            upc:
              type: string
            name:
              type: string
            hasDiscount:
              type: boolean

    ReceiptCriteria:
      allOf:
        - $ref: '#/components/schemas/BaseCriteria'
        - type: object
          properties:
            cashierIds:
              type: array
              items:
                type: integer
            startDate:
              type: string
              format: date-time
            endDate:
              type: string
              format: date-time

    CustomerCardCriteria:
      allOf:
        - $ref: '#/components/schemas/BaseCriteria'
        - type: object
          properties:
            lastName:
              type: string

    BaseCriteria:
      allOf:
        - type: object
          properties:
            offset:
              type: integer
            limit:
              type: integer
          required:
            - offset
            - limit
        - $ref: '#/components/schemas/SortCriteria'

    SortCriteria:
      type: object
      properties:
        sortField:
          type: string
        sortAscending:
          type: boolean
